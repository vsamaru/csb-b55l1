{"version":3,"sources":["src/index.js"],"names":["cloud_name","upload_preset","video_camera","canvas","cloudinary_photo","start_camera_button","take_picture_button","clear_picture_button","upload_button","upload_response","streaming","width","height","init","console","log","document","getElementById","addEventListener","startCamera","takePhoto","clearPhotos","uploadPhoto","ev","navigator","mediaDevices","getUserMedia","video","audio","then","stream","srcObject","play","srcElement","disabled","catch","err","videoHeight","videoWidth","isNaN","setAttribute","context","getContext","fillStyle","fillRect","data","toDataURL","drawImage","areAllFieldsValid","value","toBlob","blob","formdata","FormData","append","xhr","XMLHttpRequest","open","onload","response","JSON","parse","secure_url","responseText","send","alert","window"],"mappings":";;;AAiIA,aAjIA,QAAA,gBAEA,IAAIA,EACFC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EAPAC,GAAY,EACZC,EAAQ,IACRC,EAAS,EAOX,SAASC,IACPC,QAAQC,IAAI,QACZf,EAAagB,SAASC,eAAe,cACrChB,EAAgBe,SAASC,eAAe,iBACxCf,EAAec,SAASC,eAAe,gBACvCd,EAASa,SAASC,eAAe,UACjCb,EAAmBY,SAASC,eAAe,oBAC3CZ,EAAsBW,SAASC,eAAe,uBAC9CX,EAAsBU,SAASC,eAAe,uBAC9CV,EAAuBS,SAASC,eAAe,wBAC/CT,EAAgBQ,SAASC,eAAe,iBACxCR,EAAkBO,SAASC,eAAe,mBAE1CZ,EAAoBa,iBAAiB,QAASC,GAC9Cb,EAAoBY,iBAAiB,QAASE,GAC9Cb,EAAqBW,iBAAiB,QAASG,GAC/Cb,EAAcU,iBAAiB,QAASI,GAG1C,SAASH,EAAYI,GACnBT,QAAQC,IAAI,eACZS,UAAUC,aACPC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACnCC,KAAK,SAAUC,GACd5B,EAAa6B,UAAYD,EACzB5B,EAAa8B,OACbT,EAAGU,WAAWC,UAAW,EACzB5B,EAAoB4B,UAAW,EAC/B3B,EAAqB2B,UAAW,IAEjCC,MAAM,SAAUC,GACftB,QAAQC,IAAI,sBAAwBqB,KAGxClC,EAAagB,iBACX,UACA,SAACK,GACMb,IACHE,EAASV,EAAamC,aAAenC,EAAaoC,WAAa3B,GAI3D4B,MAAM3B,KACRA,EAASD,GAAS,EAAI,IAGxBT,EAAasC,aAAa,QAAS7B,GACnCT,EAAasC,aAAa,SAAU5B,GAEpCT,EAAOqC,aAAa,QAAS7B,GAC7BR,EAAOqC,aAAa,SAAU5B,GAE9BF,GAAY,KAGhB,GAIJ,SAASW,IACHoB,IAAAA,EAAUtC,EAAOuC,WAAW,MAChCD,EAAQE,UAAY,OACpBF,EAAQG,SAAS,EAAG,EAAGzC,EAAOQ,MAAOR,EAAOS,QAExCiC,IAAAA,EAAO1C,EAAO2C,UAAU,aAC5B1C,EAAiBoC,aAAa,MAAOK,GACrCrC,EAAc0B,UAAW,EAG3B,SAASd,IACHqB,IAAAA,EAAUtC,EAAOuC,WAAW,MAC5B/B,GAASC,GACXT,EAAOQ,MAAQA,EACfR,EAAOS,OAASA,EAChB6B,EAAQM,UAAU7C,EAAc,EAAG,EAAGS,EAAOC,GAC7CJ,EAAc0B,UAAW,GAEzBb,IAIJ,SAAS2B,IACAhD,MAAqB,KAArBA,EAAWiD,OAAwC,KAAxBhD,EAAcgD,MAGlD,SAAS3B,IACF0B,IAIL7C,EAAO+C,OAAO,SAACC,GACTC,IAAAA,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQH,GACxBC,EAASE,OAAO,gBAAiBrD,EAAcgD,OAC/CG,EAASE,OAAO,aAActD,EAAWiD,OAErCM,IAAAA,EAAM,IAAIC,eACdD,EAAIE,KACF,OACA,mCAAqCzD,EAAWiD,MAAQ,iBACxD,GAGFM,EAAIG,OAAS,WACPC,IAAAA,EAAWC,KAAKC,MAAM,KAAKF,UAC/BvD,EAAiBoC,aAAa,MAAOmB,EAASG,YAC9CrD,EAAgBwC,OAAS,KAAKc,aAAe,MAG/CR,EAAIS,KAAKZ,KAtBTa,MAAM,2BA0BVC,OAAOR,OAAS7C","file":"src.6e284f98.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\n\nvar cloud_name,\n  upload_preset,\n  video_camera,\n  canvas,\n  cloudinary_photo,\n  streaming = false,\n  width = 320,\n  height = 0,\n  start_camera_button,\n  take_picture_button,\n  clear_picture_button,\n  upload_button,\n  upload_response;\n\nfunction init() {\n  console.log(\"init\");\n  cloud_name = document.getElementById(\"cloud_name\");\n  upload_preset = document.getElementById(\"upload_preset\");\n  video_camera = document.getElementById(\"video_camera\");\n  canvas = document.getElementById(\"canvas\");\n  cloudinary_photo = document.getElementById(\"cloudinary_photo\");\n  start_camera_button = document.getElementById(\"start_camera_button\");\n  take_picture_button = document.getElementById(\"take_picture_button\");\n  clear_picture_button = document.getElementById(\"clear_picture_button\");\n  upload_button = document.getElementById(\"upload_button\");\n  upload_response = document.getElementById(\"upload_response\");\n\n  start_camera_button.addEventListener(\"click\", startCamera);\n  take_picture_button.addEventListener(\"click\", takePhoto);\n  clear_picture_button.addEventListener(\"click\", clearPhotos);\n  upload_button.addEventListener(\"click\", uploadPhoto);\n}\n\nfunction startCamera(ev) {\n  console.log(\"startCamera\");\n  navigator.mediaDevices\n    .getUserMedia({ video: true, audio: false })\n    .then(function (stream) {\n      video_camera.srcObject = stream;\n      video_camera.play();\n      ev.srcElement.disabled = true;\n      take_picture_button.disabled = false;\n      clear_picture_button.disabled = false;\n    })\n    .catch(function (err) {\n      console.log(\"An error occurred: \" + err);\n    });\n\n  video_camera.addEventListener(\n    \"canplay\",\n    (ev) => {\n      if (!streaming) {\n        height = video_camera.videoHeight / (video_camera.videoWidth / width);\n\n        // Firefox currently has a bug where the height can't be read from\n        // the video, so we will make assumptions if this happens.\n        if (isNaN(height)) {\n          height = width / (4 / 3);\n        }\n\n        video_camera.setAttribute(\"width\", width);\n        video_camera.setAttribute(\"height\", height);\n\n        canvas.setAttribute(\"width\", width);\n        canvas.setAttribute(\"height\", height);\n\n        streaming = true;\n      }\n    },\n    false\n  );\n}\n\nfunction clearPhotos() {\n  var context = canvas.getContext(\"2d\");\n  context.fillStyle = \"#AAA\";\n  context.fillRect(0, 0, canvas.width, canvas.height);\n\n  var data = canvas.toDataURL(\"image/png\");\n  cloudinary_photo.setAttribute(\"src\", data);\n  upload_button.disabled = true;\n}\n\nfunction takePhoto() {\n  var context = canvas.getContext(\"2d\");\n  if (width && height) {\n    canvas.width = width;\n    canvas.height = height;\n    context.drawImage(video_camera, 0, 0, width, height);\n    upload_button.disabled = false;\n  } else {\n    clearPhotos();\n  }\n}\n\nfunction areAllFieldsValid() {\n  return cloud_name.value !== \"\" && upload_preset.value !== \"\";\n}\n\nfunction uploadPhoto() {\n  if (!areAllFieldsValid()) {\n    alert(\"All fields are required\");\n    return;\n  }\n  canvas.toBlob((blob) => {\n    var formdata = new FormData();\n    formdata.append(\"file\", blob);\n    formdata.append(\"upload_preset\", upload_preset.value);\n    formdata.append(\"cloud_name\", cloud_name.value);\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(\n      \"POST\",\n      \"https://api.cloudinary.com/v1_1/\" + cloud_name.value + \"/image/upload\",\n      false\n    );\n\n    xhr.onload = function () {\n      let response = JSON.parse(this.response);\n      cloudinary_photo.setAttribute(\"src\", response.secure_url);\n      upload_response.value += this.responseText + \"\\n\";\n    };\n\n    xhr.send(formdata);\n  });\n}\n\nwindow.onload = init();\n"]}